version: 2
jobs:
    build:
        working_directory: ~/marcostagnicom
        docker:
            - image: circleci/node:8.12.0
        steps:
            - checkout
            - run:
                name: update-npm
                command: 'sudo npm install -g npm@5'
            - restore_cache:
                key: dependency-cache-{{ checksum "package.json" }}
            - run:
                name: install marcostagni
                command: npm install
            - save_cache:
                key: dependency-cache-{{ checksum "package.json" }}
                paths:
                    - ./node_modules
            - run:
                name: test
                command: npm test
            - run:
                name: code-coverage
                command: 'npm run test:coverage'
            - run:
                name: build
                command: 'npm run build'
            - run:
                name: remove dev dependencies
                command: npm prune --production
            - run:
                name: "Zip"
                command: |
                    mkdir build
                    zip -r build/app.zip ./
            - persist_to_workspace:
                  root: build
                  # Must be relative path from root
                  paths:
                      - app.zip
            - store_artifacts:
                path: coverage
                prefix: coverage

    publish_release:
        docker:
            - image: circleci/golang:1.12
        steps:
            - attach_workspace:
                  at: build
            - run:
                  name: build content
                  command: ls -larch build/
            - run:
                name: "Publish Release on GitHub"
                command: |
                    go get github.com/tcnksm/ghr
                    ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} v${CIRCLE_BUILD_NUM} build/

    deploy:
        machine:
            enabled: true
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "70:ef:a2:55:4f:82:5b:31:b8:53:38:ec:93:e0:e9:48"
            - run:
                name: Deploy Over SSH
                command: |
                    ssh -o "StrictHostKeyChecking no" -v $SSH_USER@$SSH_HOST "ls"

workflows:
    version: 2
    build-and-deploy:
        jobs:
            - build
            - publish_release:
                  requires:
                      - build
            - deploy:
                  requires:
                      - publish_release
                  filters:
                      branches:
                          only: master
